@using OJS.Common.Extensions
@using OJS.Common.Models
@model OJS.Web.Areas.Contests.ViewModels.Submissions.SubmissionDetailsViewModel
@{
    ViewBag.Title = string.Format("Решение №{0} от {1} към задача {2}", Model.Id, Model.UserName, Model.ProblemName);
}

@section styles {
    @Styles.Render("~/Content/CodeMirror/codemirror")
}

@section scripts {
    @Scripts.Render("~/bundles/codemirror")
    <script type="text/javascript">
        $(function() {
            var textEditor = document.getElementById("code");
            var editor = new CodeMirror.fromTextArea(textEditor, {
                mode: "text/x-csharp",
                lineNumbers: true,
                matchBrackets: true,
                theme: "the-matrix",
                showCursorWhenSelecting: true,
                undoDepth: 100,
                lineWrapping: true,
                readOnly: true,
                autofocus: true,
            });

            editor.setSize('100%', '100%');
        });
    </script>
}

<ol class="breadcrumb">
    <li><a href="/">Начало</a></li>
    <li><a href="/Submissions">Решения</a></li>
    <li class="active">@Model.Id</li>
</ol>

<h1>@ViewBag.Title</h1>

@if (User.IsInRole("Administrator"))
{
    <a class="btn btn-sm btn-primary" href="/Administration/Submissions/Update/@Model.Id">Промяна</a>
    <a class="btn btn-sm btn-primary" href="/Administration/Submissions/Delete/@Model.Id">Изтриване</a>
    <a class="btn btn-sm btn-primary" href="/Administration/Tests/Problem/@Model.ProblemId">Тестове</a>
    <a class="btn btn-sm btn-primary" href="/Users/@Model.UserName">Профил на автора</a>
    <a class="btn btn-sm btn-primary" href="/Administration/Submissions/Retest/@Model.Id">Ретест</a>
    <div class="clearfix"></div>
    <br />
    if (!string.IsNullOrWhiteSpace(Model.ProcessingComment))
    {
        <h2>Резултат от изпълнението:</h2>
        <pre>@Model.ProcessingComment</pre>
    }
}

@if (Model.IsDeleted)
{
    <div class="alert alert-danger">Това решение е изтрито!!!</div>
}

<textarea id="code">@Model.ContentAsString</textarea>
<br />

@if (!Model.Processed)
{
    if (Model.Processing)
    {
        <div class="alert alert-info">Решението се изпълнява в момента... Моля бъдете търпеливи.</div>
    }
    else
    {
        <div class="alert alert-info">Решението е в опашката и скоро ще се изпълни. Моля бъдете търпеливи.</div>
    }
}
else
{
    if (!Model.IsCompiledSuccessfully)
    {
        <div class="alert alert-danger">Възникнала е грешка по време на компилацията</div>
    }
    else if (!Model.ShowResults) // Inform user that compilation is successful when not showing him all the test runs
    {
        <h2 class="text-success">Успешна компилация.</h2>
    }
    
    if (!string.IsNullOrWhiteSpace(Model.CompilerComment))
    {
        <h2>Резултат от компилацията:</h2>
        <pre>@Model.CompilerComment</pre>
    }
}

@if (Model.Processed && (Model.ShowResults || User.IsInRole("Administrator")))
{
    foreach (var testResult in Model.TestRuns.OrderByDescending(x => x.IsTrialTest).ThenBy(x => x.Order))
    {
        var className = string.Empty;
        var testResultText = string.Empty;
        if (testResult.ResultType == TestRunResultType.CorrectAnswer)
        {
            className = "text-success";
            testResultText = "Верен отговор";
        }
        else if (testResult.ResultType == TestRunResultType.WrongAnswer)
        {
            className = "text-danger";
            testResultText = "Грешен отговор";
        }
        else if (testResult.ResultType == TestRunResultType.MemoryLimit)
        {
            className = "text-danger";
            testResultText = "Недостатъчна памет";
        }
        else if (testResult.ResultType == TestRunResultType.TimeLimit)
        {
            className = "text-danger";
            testResultText = "Недостатъчно време";
        }
        else if (testResult.ResultType == TestRunResultType.RunTimeError)
        {
            className = "text-danger";
            testResultText = "Грешка по време на изпълнение";
        }

        <h2 class="@className">
            @if (testResult.IsTrialTest)
            {
                @:Нулев тест №@testResult.Order
            }
            else
            {
                @:Тест №@testResult.Order
            }
            (@testResultText)
            @if (User.IsInRole("Administrator"))
            {
                <small>Run №@testResult.Id</small>
                <small><a href="/Administration/Tests/Details/@testResult.TestId">Test №@testResult.TestId</a></small>
            }
        </h2>

        if (testResult.IsTrialTest)
        {
            <div>Нулевите тестове не се броят в крайния резултат.</div>
        }

        if (!string.IsNullOrWhiteSpace(testResult.ExecutionComment))
        {
            var executionComment = testResult.ExecutionComment;
            if (!User.IsInRole("Administrator"))
            {
                if (Model.SubmissionType.CompilerType == CompilerType.CSharp)
                {
                    // The following code will hide the exception message from user when the code is written in C#
                    var errorParts = executionComment.Split(':');
                    if (errorParts.Length >= 2)
                    {
                        executionComment = errorParts[0] + ":" + errorParts[1];
                    }
                    else
                    {
                        executionComment = executionComment.MaxLengthWithEllipsis(37);
                    }
                }
                else // Other language
                {
                    executionComment = executionComment.MaxLengthWithEllipsis(64);
                }
            }

            <pre>@executionComment</pre>
        }

        if (!string.IsNullOrWhiteSpace(testResult.CheckerComment))
        {
            if (testResult.IsTrialTest || User.IsInRole("Administrator"))
            {
                <pre>@testResult.CheckerComment</pre>
            }
        }

        <div>Използвано време (в милисекунди): @testResult.TimeUsed</div>
        <div>Използванa памет (в bytes): @testResult.MemoryUsed</div>
    }
}
