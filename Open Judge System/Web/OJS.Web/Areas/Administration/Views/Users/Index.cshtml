@{
    ViewBag.Title = "Потребители";
    const string ControllerName = "Users";
}
<h1>@ViewBag.Title</h1>

@(Html.Kendo().Grid<OJS.Web.Areas.Administration.ViewModels.User.UserProfileAdministrationViewModel>()
    .Name("DataGrid")
    .Columns(columns =>
        {
            columns.Bound(model => model.UserName);
            columns.Bound(model => model.Email);
            columns.Bound(model => model.IsGhostUser).Hidden();
            columns.Bound(model => model.FirstName);
            columns.Bound(model => model.LastName);
            columns.Bound(model => model.City);
            columns.Bound(model => model.EducationalInstitution).Hidden();
            columns.Bound(model => model.FacultyNumber).Hidden();
            columns.Bound(model => model.DateOfBirth);
            columns.Bound(model => model.Company).Hidden();
            columns.Bound(model => model.JobTitle).Hidden();
            columns.Bound(model => model.Age).Filterable(false);
            columns.Bound(model => model.CreatedOn).Format("{0:dd/MM/yyyy HH:mm}").Hidden();
            columns.Bound(model => model.ModifiedOn).Format("{0:dd/MM/yyyy HH:mm}").Hidden();
            columns.Command(command => command.Edit().Text(" ").UpdateText("Промяна").CancelText("Отказ")).Width(80);
        })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("Обратно към администрацията").Action("Navigation", "Administration", new { Area = "" }).Name("custom-toolbar-button");
        toolbar.Custom().Text("Експорт към Excel").Name("custom-toolbar-button").HtmlAttributes(new { id = "export" }).Url(Url.Action("ExportToExcel", ControllerName, new { page = 1, pageSize = "~", filter = "!!", sort = "~" }));
    })
    .Editable(editable =>
    {
        editable.Mode(GridEditMode.PopUp);
        editable.Window(w => w.Title(ViewBag.Title));
    })
    .ColumnMenu()
    .Events(e => e.DataBound("onDataBound"))
    .Pageable(x => x.Refresh(true))
    .Sortable(x => x.Enabled(true).AllowUnsort(false))
    .Filterable(x => x.Enabled(true))
        /*.Groupable(x =>
        {
            x.Enabled(true);
            x.Messages(m => m.Empty("Хванете заглавието на колона и го преместете тук, за да групирате по тази колона."));
        })*/
    .Reorderable(x => x.Columns(true))
    .Resizable(x => x.Columns(true))
    .DataSource(datasource => datasource
        .Ajax()
        .ServerOperation(true)
        .Model(model =>
            {
                model.Id(m => m.Id);
            })
        .Sort(sort => sort.Add(x => x.UserName))
        .Read(read => read.Action("Read", ControllerName))
        .Update(update => update.Action("Update", ControllerName))
        .Events(ev => ev.Error("validateModelStateErrors"))
    )
)

<script type="text/javascript">
    function onDataBound(e) {
        CreateExportToExcelButton();
    }
</script>